f
load.data
load
library(phangorn)
treesets <- function(taxa,n,boost,target){
    # outputs sets of three trees which are equally distant from each other
    # taxa is number of taxa
    # n is unweighted RF distance between trees
    # boost is a speedup (set = to n)
    # target is number of sets to create
    # branch lengths are drawn from Gamma(2.5,10) (mean = 25)
    l <- list()
    t <- rtree(taxa)
    e <- length(t$edge.length)
    t$edge.length <- rep(1.0, times=e)
    while(length(l) <= target){
        trees <- rNNI(t,n/2+boost,10)
        for(i in 1:10){
            if(dist.topo(t,trees[[i]])==n){
                moretrees <- rNNI(trees[[i]],n/2+boost,20)
                for(j in 1:20){
                    if(dist.topo(t,moretrees[[j]])==n){
                        if(dist.topo(trees[[i]],moretrees[[j]])==n){
                            t$edge.length <- rgamma(e,shape=2.5,scale=10)
                            trees[[i]]$edge.length <- rgamma(e,shape=2.5,scale=10)
                            moretrees[[j]]$edge.length <- rgamma(e,shape=2.5,scale=10)
                            vec <- c(write.tree(t),write.tree(trees[[i]]),write.tree(moretrees[[j]]))
                            l[[length(l)+1]] <- vec
                        }
                    }
                }
            }
        }
    }
    return(l[1:target])
}
library(phangorn)
treesets <- function(taxa,n,boost,target){
    # outputs sets of three trees which are equally distant from each other
    # taxa is number of taxa
    # n is unweighted RF distance between trees
    # boost is a speedup (set = to n)
    # target is number of sets to create
    # branch lengths are drawn from Gamma(2.5,10) (mean = 25)
    l <- list()
    t <- rtree(taxa)
    e <- length(t$edge.length)
    t$edge.length <- rep(1.0, times=e)
    while(length(l) <= target){
        trees <- rNNI(t,n/2+boost,10)
        for(i in 1:10){
            if(dist.topo(t,trees[[i]])==n){
                moretrees <- rNNI(trees[[i]],n/2+boost,20)
                for(j in 1:20){
                    if(dist.topo(t,moretrees[[j]])==n){
                        if(dist.topo(trees[[i]],moretrees[[j]])==n){
                            t$edge.length <- rgamma(e,shape=2.5,scale=10)
                            trees[[i]]$edge.length <- rgamma(e,shape=2.5,scale=10)
                            moretrees[[j]]$edge.length <- rgamma(e,shape=2.5,scale=10)
                            vec <- c(write.tree(t),write.tree(trees[[i]]),write.tree(moretrees[[j]]))
                            l[[length(l)+1]] <- vec
                        }
                    }
                }
            }
        }
    }
    return(l[1:target])
}
treesets(10,2,2,100)
for(i in 1:length(l)
)
{}
two<-treesets(10,2,2,100)
four <- treesets(10,4,6,100)
six <- treesets(10,6,8,100)
eight <- treesets(10,8,8,100)
ten <- treesets(10,10,10,100)
twelve<- treesets(10,12,12,100)
fourteen <- treesets(10,14,20,100)
two<-treesets(10,20,2,100)
two<-treesets(10,6,2,100)
two
for(i in 1:100) {
  cat( two[[i]],'',sep='\n')
}
for(i in 1:100) {
 cat( two[[i]],'',sep='\n')
for(i in 1:100) cat( two[[i]],'',sep='\n' )
for(i in 1:100) cat( two[[i]],'',sep='\n' ,file='../../clustering_project/data/rf2.nwk')
for(i in 1:100) cat( four[[i]],'',sep='\n' ,file='../../clustering_project/data/rf4.nwk')
for(i in 1:100) cat( six[[i]],'',sep='\n' ,file='../../clustering_project/data/rf6.nwk')
for(i in 1:100) cat( eight[[i]],'',sep='\n' ,file='../../clustering_project/data/rf8.nwk')
for(i in 1:100) cat( ten[[i]],'',sep='\n' ,file='../../clustering_project/data/rf10.nwk')
for(i in 1:100) cat( twelve[[i]],'',sep='\n' ,file='../../clustering_project/data/rf12.nwk')
for(i in 1:100) cat( fourteen[[i]],'',sep='\n' ,file='../../clustering_project/data/rf14.nwk')
two
for(i in 1:100) cat( two[[i]],'',sep='\n' ,file='../../clustering_project/data/rf2.nwk', append=TRUE)
for(i in 1:100) cat( four[[i]],'',sep='\n' ,file='../../clustering_project/data/rf4.nwk', append=TRUE)
for(i in 1:100) cat( six[[i]],'',sep='\n' ,file='../../clustering_project/data/rf6.nwk', append=TRUE)
for(i in 1:100) cat( eight[[i]],'',sep='\n' ,file='../../clustering_project/data/rf8.nwk', append=TRUE)
for(i in 1:100) cat( ten[[i]],'',sep='\n' ,file='../../clustering_project/data/rf10.nwk', append=TRUE)
for(i in 1:100) cat( twelve[[i]],'',sep='\n' ,file='../../clustering_project/data/rf12.nwk', append=TRUE)
for(i in 1:100) cat( fourteen[[i]],'',sep='\n' ,file='../../clustering_project/data/rf14.nwk', append=TRUE)
for(i in 1:100) cat( two[[i]],'',sep='\n' ,file='../../clustering_project/data/rf2.nwk', append=TRUE)
library(phangorn)
treesets <- function(taxa,n,boost,target){
    # outputs sets of three trees which are equally distant from each other
    # taxa is number of taxa
    # n is unweighted RF distance between trees
    # boost is a speedup (set = to n)
    # target is number of sets to create
    # branch lengths are drawn from Gamma(2.5,20) (mean = 50)
    l <- list()
    t <- rtree(taxa)
    e <- length(t$edge.length)
    t$edge.length <- rep(1.0, times=e)
    while(length(l) <= target){
        trees <- rNNI(t,n/2+boost,10)
        for(i in 1:10){
            if(dist.topo(t,trees[[i]])==n){
                moretrees <- rNNI(trees[[i]],n/2+boost,20)
                for(j in 1:20){
                    if(dist.topo(t,moretrees[[j]])==n){
                        if(dist.topo(trees[[i]],moretrees[[j]])==n){
                            t$edge.length <- rgamma(e,shape=2.5,scale=20)
                            trees[[i]]$edge.length <- rgamma(e,shape=2.5,scale=20)
                            moretrees[[j]]$edge.length <- rgamma(e,shape=2.5,scale=20)
                            vec <- c(write.tree(t),write.tree(trees[[i]]),write.tree(moretrees[[j]]))
                            l[[length(l)+1]] <- vec
                        }
                    }
                }
            }
        }
    }
    return(l[1:target])
}
library(phangorn)
treesets <- function(taxa,n,boost,target){
    # outputs sets of three trees which are equally distant from each other
    # taxa is number of taxa
    # n is unweighted RF distance between trees
    # boost is a speedup (set = to n)
    # target is number of sets to create
    # branch lengths are drawn from Gamma(2.5,20) (mean = 50)
    l <- list()
    t <- rtree(taxa)
    e <- length(t$edge.length)
    t$edge.length <- rep(1.0, times=e)
    while(length(l) <= target){
        trees <- rNNI(t,n/2+boost,10)
        for(i in 1:10){
            if(dist.topo(t,trees[[i]])==n){
                moretrees <- rNNI(trees[[i]],n/2+boost,20)
                for(j in 1:20){
                    if(dist.topo(t,moretrees[[j]])==n){
                        if(dist.topo(trees[[i]],moretrees[[j]])==n){
                            t$edge.length <- rgamma(e,shape=2.5,scale=20)
                            trees[[i]]$edge.length <- rgamma(e,shape=2.5,scale=20)
                            moretrees[[j]]$edge.length <- rgamma(e,shape=2.5,scale=20)
                            vec <- c(write.tree(t),write.tree(trees[[i]]),write.tree(moretrees[[j]]))
                            l[[length(l)+1]] <- vec
                        }
                    }
                }
            }
        }
    }
    return(l[1:target])
}
two<-treesets(10,2,2,100)
four<-treesets(10,4,4,100)
six<-treesets(10,6,6,100)
eight<-treesets(10,8,10,100)
ten <- treesets(10,10,14,100)
twelve(10,12,14,100)
twelve<-treesets(10,12,14,100)
fourteen<-treesets(10,14,14,100)
for(i in 1:100) cat( two[[i]],'',sep='\n' ,file='../../clustering_project/data/rf2.nwk', append=TRUE)
for(i in 1:100) cat( four[[i]],'',sep='\n' ,file='../../clustering_project/data/rf4.nwk', append=TRUE)
for(i in 1:100) cat( six[[i]],'',sep='\n' ,file='../../clustering_project/data/rf6.nwk', append=TRUE)
for(i in 1:100) cat( eight[[i]],'',sep='\n' ,file='../../clustering_project/data/rf8.nwk', append=TRUE)
for(i in 1:100) cat( ten[[i]],'',sep='\n' ,file='../../clustering_project/data/rf10.nwk', append=TRUE)
for(i in 1:100) cat( twelve[[i]],'',sep='\n' ,file='../../clustering_project/data/rf12.nwk', append=TRUE)
for(i in 1:100) cat( fourteen[[i]],'',sep='\n' ,file='../../clustering_project/data/rf14.nwk', append=TRUE)
t<- read.tree(text='((A,B),(C,D),E);')
library(ape)
t<- read.tree(text='((A,B),(C,D),E);')
plot(t)
t<- read.tree(text='(((A,B),(C,D)),E);')
plot(t)
plot.phylo()
plot.phylo(t)
plot.phylo
t
plot(t,show.tip.label=FALSE,edge.width=3)
plot(t,show.tip.label=FALSE,edge.width=3,root.edge=TRUE)
ladderize(t)
plot(t,show.tip.label=FALSE,edge.width=3,root.edge=TRUE)
plot(ladderize(t),show.tip.label=FALSE,edge.width=3,root.edge=TRUE)
plot(ladderize(t),show.tip.label=FALSE,edge.width=3,root.edge=TRUE, main="right-ladderized")
plot(ladderize(t),show.tip.label=FALSE,edge.width=3,root.edge=TRUE, main="left-ladderized")
plot(ladderize(t,FALSE),show.tip.label=FALSE,edge.width=3,root.edge=TRUE)
plot(ladderize(t,FALSE),show.tip.label=FALSE,edge.width=10,root.edge=TRUE)
plot(ladderize(t,FALSE),show.tip.label=FALSE,edge.width=12,root.edge=TRUE)
plot(ladderize(t,FALSE),show.tip.label=FALSE,edge.width=15,root.edge=TRUE)
pdf('~/Documents/SMBE/tree2.pdf')
plot(ladderize(t,FALSE),show.tip.label=FALSE,edge.width=15,root.edge=TRUE)
dev.off()
pdf('~/Documents/SMBE/tree2.pdf')
plot(ladderize(t,FALSE),show.tip.label=FALSE,edge.width=18,root.edge=TRUE)
dev.off()
import ape
library(ape)
t1<-rtree(7)
t2<-rtree(7)
t3<-rtree(7)
plot(t1,tip.labels=FALSE,line.width=18)
t3<-rtree(7,rooted=FALSE)
plot(t3)
t2<-rtree(7,rooted=FALSE)
t1<-rtree(7,rooted=FALSE)
plot.phylo
t1<-rtree(7,rooted=FALSE,edge.width=18,type="r",show.tip.label=FALSE)
plot(t1,edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="r",show.tip.label=FALSE)
plot.phylo
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=ength=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE))
plot(ladderize(rtree(7,rooted=FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE))
plot(ladderize(rtree(7,rooted=FALSE)),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE)),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE)),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE)),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=FALSE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
rtree
rgamma
rtree(7,br=rgamma)
rtree(7,br=rgamma(2.5,4))
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(1,2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
plot(ladderize(rtree(7,rooted=FALSE,br=rgamma(2.5,4)),FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
chk<-function {
chk <- function() {
  t <- rtree(7,rooted=FALSE,br=rgamma(2,5))
  plot(ladderize(t,FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
  return(t)
}
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
plot(ladderize(t,FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
pdf('~/Documents/SMBE/tree1b.pdf')
plot(ladderize(t,FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
dev.off()
t<-chk()
t<-chk()
t<-chk()
pdf('~/Documents/SMBE/tree1b.pdf')
plot(ladderize(t,FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
dev.off()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
pdf('~/Documents/SMBE/tree2b.pdf')
plot(ladderize(t,FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
dev.off()
t<-chk()
t<-chk()
t<-chk()
t<-chk()
pdf('~/Documents/SMBE/tree3b.pdf')
plot(ladderize(t,FALSE),edge.width=18,type="p",show.tip.label=FALSE,use.edge.length=TRUE)
dev.off()
